jobs:
  trigger_gitlab_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Set up GitHub repository and GitLab API token
        run: |
          echo "GITLAB_TOKEN=${{ secrets.GITLAB_TOKEN }}" >> $GITHUB_ENV
          echo "GITLAB_PROJECT_ID=${{ secrets.GITLAB_PROJECT_ID }}" >> $GITHUB_ENV

      - name: Install jq
        run: sudo apt-get install jq

      - name: Trigger GitLab Pipeline
        run: |
          RESPONSE=$(curl --silent --request POST \
            --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
            --data "ref=main" \
            "https://gitlab.com/api/v4/projects/$GITLAB_PROJECT_ID/pipeline")

          # Affiche la réponse de l'API pour vérifier si le pipeline est bien déclenché
          echo "Réponse de l'API GitLab: $RESPONSE"

          # Récupère l'ID du pipeline
          PIPELINE_ID=$(echo "$RESPONSE" | jq -r '.id')

          if [ "$PIPELINE_ID" == "null" ]; then
            echo "Échec du déclenchement du pipeline GitLab"
            exit 1
          fi

          echo "Pipeline GitLab déclenché avec succès ! ID: $PIPELINE_ID"
          echo "PIPELINE_ID=$PIPELINE_ID" >> $GITHUB_ENV

      - name: Monitor GitLab Pipeline Status
        run: |
          STATUS="created"
          while [[ "$STATUS" == "created" || "$STATUS" == "pending" || "$STATUS" == "running" ]]; do
            sleep 10
            RESPONSE=$(curl --silent --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
              "https://gitlab.com/api/v4/projects/$GITLAB_PROJECT_ID/pipelines/$PIPELINE_ID")
            STATUS=$(echo "$RESPONSE" | jq -r '.status')
            echo "Statut actuel du pipeline: $STATUS"
          done

          if [ "$STATUS" == "success" ]; then
            echo "Le pipeline GitLab a réussi ✅"
          else
            echo "Le pipeline GitLab a échoué ❌"
            exit 1
          fi
